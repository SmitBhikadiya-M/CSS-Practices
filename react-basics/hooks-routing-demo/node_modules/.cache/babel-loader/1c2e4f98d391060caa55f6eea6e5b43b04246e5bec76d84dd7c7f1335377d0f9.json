{"ast":null,"code":"var _jsxFileName = \"/home/smit/Desktop/Smit/Learning/Fundamentals/web-dev/react-basics/hooks-routing-demo/src/components/Hooks/UseStateDemo.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet intialState = 0;\nconst Div = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-width: 400px;\n  gap: 4px;\n`;\n_c = Div;\nconst UseStateDemo = () => {\n  _s();\n  const [count, setCount] = useState(intialState);\n  function experimentOne() {\n    setCount(prev => intialState);\n    setTimeout(() => setCount(prev => prev + 2), 2000);\n    setCount(prev => prev + 3);\n  }\n  function experimentTwo() {\n    setCount(count + intialState);\n    setTimeout(() => setCount(count + 2), 2000);\n    setCount(count + 3);\n  }\n  function increment(by = 1) {\n    setCount(count + by);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Counter : \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Div, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(intialState),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => experimentOne(),\n        children: \"Experiment One\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => experimentTwo(),\n        children: \"Experiment Two\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => increment(),\n        children: \"INC (+1)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => increment(5),\n        children: \"INC (+5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => increment(-5),\n        children: \"DEC (-5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UseStateDemo, \"wD/lCP/R6VHz5a+rQh2g4Xa5Vys=\");\n_c2 = UseStateDemo;\nexport const UseStateDemoAsString = `\n    let intialState = 0;\n    const UseStateDemo = () => {\n      const [count, setCount] = useState(intialState);\n      \n      function experimentOne() {\n        setCount((prev) => intialState);\n        setTimeout(() => setCount((prev) => prev + 2), 2000);\n        setCount((prev) => prev + 3);\n      }\n\n      function experimentTwo() {\n        setCount(count + intialState);\n        setTimeout(() => setCount(count + 2), 2000);\n        setCount(count + 3);\n      }\n\n      function increment(by = 1) {\n        setCount(count + by);\n      }\n\n      return (\n        <>\n          <div>\n            <h2>Counter : {count}</h2>\n          </div>\n          <div>\n            <button onClick={() => setCount(intialState)}>Reset</button>\n            <button onClick={() => experimentOne()}>Experiment One</button>\n            <button onClick={() => experimentTwo()}>Experiment Two</button>\n            <button onClick={() => increment()}>INC (+1)</button>\n            <button onClick={() => increment(5)}>INC (+5)</button>\n            <button onClick={() => increment(-5)}>DEC (-5)</button>\n          </div>\n        </>\n      );\n    };\n`;\nexport default UseStateDemo;\nvar _c, _c2;\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"UseStateDemo\");","map":{"version":3,"names":["useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","intialState","Div","div","_c","UseStateDemo","_s","count","setCount","experimentOne","prev","setTimeout","experimentTwo","increment","by","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","UseStateDemoAsString","$RefreshReg$"],"sources":["/home/smit/Desktop/Smit/Learning/Fundamentals/web-dev/react-basics/hooks-routing-demo/src/components/Hooks/UseStateDemo.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { styled } from \"styled-components\";\n\nlet intialState = 0;\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  max-width: 400px;\n  gap: 4px;\n`;\n\nconst UseStateDemo = () => {\n  const [count, setCount] = useState(intialState);\n\n  function experimentOne() {\n    setCount((prev) => intialState);\n    setTimeout(() => setCount((prev) => prev + 2), 2000);\n    setCount((prev) => prev + 3);\n  }\n\n  function experimentTwo() {\n    setCount(count + intialState);\n    setTimeout(() => setCount(count + 2), 2000);\n    setCount(count + 3);\n  }\n\n  function increment(by = 1) {\n    setCount(count + by);\n  }\n\n  return (\n    <>\n      <div>\n        <h2>Counter : {count}</h2>\n      </div>\n      <Div>\n        <button onClick={() => setCount(intialState)}>Reset</button>\n        <button onClick={() => experimentOne()}>Experiment One</button>\n        <button onClick={() => experimentTwo()}>Experiment Two</button>\n        <button onClick={() => increment()}>INC (+1)</button>\n        <button onClick={() => increment(5)}>INC (+5)</button>\n        <button onClick={() => increment(-5)}>DEC (-5)</button>\n      </Div>\n    </>\n  );\n};\n\nexport const UseStateDemoAsString = `\n    let intialState = 0;\n    const UseStateDemo = () => {\n      const [count, setCount] = useState(intialState);\n      \n      function experimentOne() {\n        setCount((prev) => intialState);\n        setTimeout(() => setCount((prev) => prev + 2), 2000);\n        setCount((prev) => prev + 3);\n      }\n\n      function experimentTwo() {\n        setCount(count + intialState);\n        setTimeout(() => setCount(count + 2), 2000);\n        setCount(count + 3);\n      }\n\n      function increment(by = 1) {\n        setCount(count + by);\n      }\n\n      return (\n        <>\n          <div>\n            <h2>Counter : {count}</h2>\n          </div>\n          <div>\n            <button onClick={() => setCount(intialState)}>Reset</button>\n            <button onClick={() => experimentOne()}>Experiment One</button>\n            <button onClick={() => experimentTwo()}>Experiment Two</button>\n            <button onClick={() => increment()}>INC (+1)</button>\n            <button onClick={() => increment(5)}>INC (+5)</button>\n            <button onClick={() => increment(-5)}>DEC (-5)</button>\n          </div>\n        </>\n      );\n    };\n`;\n\nexport default UseStateDemo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}